{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isndarrayLike = require( '@stdlib/assert-is-ndarray-like' );\nvar isReadOnly = require( '@stdlib/ndarray-base-assert-is-read-only' );\nvar isFunction = require( '@stdlib/assert-is-function' );\nvar base = require( '@stdlib/ndarray-base-fill-by' );\nvar format = require( '@stdlib/string-format' );\n\n\n// MAIN //\n\n/**\n* Fills an input ndarray according to a callback function.\n*\n* @param {ndarray} x - input ndarray\n* @param {Function} fcn - callback function\n* @param {*} [thisArg] - callback function execution context\n* @throws {TypeError} first argument must be an ndarray-like object\n* @throws {TypeError} second argument must be a function\n* @throws {Error} cannot write to a read-only ndarray\n* @returns {ndarray} updated ndarray\n*\n* @example\n* var zeros = require( '@stdlib/ndarray-zeros' );\n* var getData = require( '@stdlib/ndarray-data-buffer' );\n*\n* function fcn() {\n*     return 10.0;\n* }\n*\n* var x = zeros( [ 3, 1, 2 ], {\n*     'dtype': 'float64'\n* });\n*\n* fillBy( x, fcn );\n*\n* console.log( getData( x ) );\n* // => <Float64Array>[ 10.0, 10.0, 10.0, 10.0, 10.0, 10.0 ]\n*/\nfunction fillBy( x, fcn, thisArg ) {\n\tif ( !isndarrayLike( x ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an ndarray-like object. Value: `%s`.', x ) );\n\t}\n\tif ( isReadOnly( x ) ) {\n\t\tthrow new Error( 'invalid argument. Cannot write to a read-only array.' );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tbase( x, fcn, thisArg );\n\treturn x;\n}\n\n\n// EXPORTS //\n\nmodule.exports = fillBy;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Fill an input ndarray according to a callback function.\n*\n* @module @stdlib/ndarray-fill-by\n*\n* @example\n* var zeros = require( '@stdlib/ndarray-zeros' );\n* var getData = require( '@stdlib/ndarray-data-buffer' );\n* var fillBy = require( '@stdlib/ndarray-fill-by' );\n*\n* function fcn() {\n*     return 10.0;\n* }\n*\n* var x = zeros( [ 3, 1, 2 ], {\n*     'dtype': 'float64'\n* });\n*\n* fillBy( x, fcn );\n*\n* console.log( getData( x ) );\n* // => <Float64Array>[ 10.0, 10.0, 10.0, 10.0, 10.0, 10.0 ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAgB,QAAS,gCAAiC,EAC1DC,EAAa,QAAS,0CAA2C,EACjEC,EAAa,QAAS,4BAA6B,EACnDC,EAAO,QAAS,8BAA+B,EAC/CC,EAAS,QAAS,uBAAwB,EAiC9C,SAASC,EAAQC,EAAGC,EAAKC,EAAU,CAClC,GAAK,CAACR,EAAeM,CAAE,EACtB,MAAM,IAAI,UAAWF,EAAQ,gFAAiFE,CAAE,CAAE,EAEnH,GAAKL,EAAYK,CAAE,EAClB,MAAM,IAAI,MAAO,sDAAuD,EAEzE,GAAK,CAACJ,EAAYK,CAAI,EACrB,MAAM,IAAI,UAAWH,EAAQ,qEAAsEG,CAAI,CAAE,EAE1G,OAAAJ,EAAMG,EAAGC,EAAKC,CAAQ,EACfF,CACR,CAKAP,EAAO,QAAUM,IC9BjB,IAAII,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "isndarrayLike", "isReadOnly", "isFunction", "base", "format", "fillBy", "x", "fcn", "thisArg", "main"]
}
